# author:         
#  name:         Matthew Grasinger
#  email:        grasingerm at gmail dot com
#
# date-created:   2015-07-12
#
# description: >
#   Flow out of a channel expansion

preamble: >
  const ni = 250;
  const nj = 50;
  const u = 0.01;
  const mu_p = 0.2;
  const tau_y = 0.001;
  const m = 1.0e8;
  const gamma_min = 1.0e-9;
  const nsteps = 15000;
  const id = "re-003_bn-0025";
  const datadir = joinpath("data", "expand", id);
  const constit_rel_f = init_constit_mrt_bingham_explicit(mu_p, tau_y, m, gamma_min, 1.0);
  using PyPlot;

datadir:    { value: datadir,   expr: true    }

# material init
rho_0:      { value: 1.0,       expr: false   }
nu:         { value: mu_p,      expr: true    }

# lattice configuration
dx:         { value: 1.0,       expr: false   }
dt:         { value: 1.0,       expr: false   }
ni:         { value: ni,        expr: true    }
nj:         { value: nj,        expr: true    }

# simulation parameters
nsteps:     { value: nsteps,    expr: true    }
col_f:      init_col_mrt(constit_rel_f, S_luo)

# boundaries
sbounds:
  value: >
         transpose([1        nj       int(nj/4)    nj;
                    nj       ni       1            nj;])
  expr: true

cbounds:
  value: >
         transpose([1        nj        int(nj/4)    nj;
                    nj+1     ni        1            nj;])
  expr: true

# boundary conditions
bcs:
  - north_bounce_back!
  - begin; bind_south_bounce_back1!(lat) = south_bounce_back!(lat, 1, nj, int(nj/4)); end
  - begin; bind_south_bounce_back2!(lat) = south_bounce_back!(lat, nj, ni, 1); end
  - begin; bind_west_bounce_back2!(lat) = west_bounce_back!(lat, nj, 1, int(nj/4)); end
  - begin; bind_west_velocity!(lat) = west_velocity!(lat, u, 1, int(nj/4), nj); end
  - east_open!

# callback functions
callbacks:
  - print_step_callback(100, id)
  - write_jld_file_callback(datadir, int(round(nsteps/20)))

# clean-up, backup, write out
finally:
  - plot_umag_contour_callback(1, joinpath(datadir, "u_mag"), 0.0)
  - plot_strain_rate_mrt_contours_callback(1, joinpath(datadir, "gamma"), 0.0)
  - plot_is_yielded_mrt_contours_callback(1, joinpath(datadir, "yield"), gamma_min, 0.0)
  - write_jld_file_callback(datadir)

# test for conditions to end simulation
test_for_term: is_steadystate_x
